{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n      state.totalAmount = action.payload.totalAmount;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          // Use totalPrice (capital 'P')\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price; // Use totalPrice (capital 'P')\n      }\n      state.totalAmount += newItem.price;\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.totalAmount -= existingItem.price;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const CartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","totalAmount","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","CartActions","actions"],"sources":["E:/webdev practice/some react projects/Redux/3.Shop-app/src/store/cart-slice.js"],"sourcesContent":["\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    totalAmount: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n\r\n    replaceCart(state,action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n      state.totalAmount = action.payload.totalAmount;\r\n    },\r\n\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find(item => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.changed= true;\r\n      \r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price, // Use totalPrice (capital 'P')\r\n          name: newItem.title\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price; // Use totalPrice (capital 'P')\r\n      }\r\n      state.totalAmount += newItem.price; \r\n    },\r\n\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find(item => item.id === id);\r\n      state.totalQuantity--;\r\n      state.totalAmount -= existingItem.price;\r\n      state.changed = true\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter(item => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n      \r\n    }\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nexport const CartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IAERC,WAAWA,CAACC,KAAK,EAACC,MAAM,EAAE;MACxBD,KAAK,CAACL,aAAa,GAAGM,MAAM,CAACC,OAAO,CAACP,aAAa;MAClDK,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;MAClCM,KAAK,CAACJ,WAAW,GAAGK,MAAM,CAACC,OAAO,CAACN,WAAW;IAChD,CAAC;IAEDO,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACN,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACrER,KAAK,CAACL,aAAa,EAAE;MACrBK,KAAK,CAACH,OAAO,GAAE,IAAI;MAEnB,IAAI,CAACQ,YAAY,EAAE;QACjBL,KAAK,CAACN,KAAK,CAACe,IAAI,CAAC;UACfD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UAAE;UAC3BlB,IAAI,EAAEY,OAAO,CAACS;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK,CAAC,CAAC;MACrE;MACAV,KAAK,CAACJ,WAAW,IAAIQ,OAAO,CAACM,KAAK;IACpC,CAAC;IAEDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACN,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACL,aAAa,EAAE;MACrBK,KAAK,CAACJ,WAAW,IAAIS,YAAY,CAACK,KAAK;MACvCV,KAAK,CAACH,OAAO,GAAG,IAAI;MACpB,IAAIQ,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/BX,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACqB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,MAAM;QACLH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MACxE;IAEF;EACF;AACF,CAAC,CAAC;AAKF,OAAO,MAAMM,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAE5C,eAAe1B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}