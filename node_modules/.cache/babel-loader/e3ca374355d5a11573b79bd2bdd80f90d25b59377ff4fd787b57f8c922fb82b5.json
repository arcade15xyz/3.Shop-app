{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { CartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://just-project-1400b-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(CartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://just-project-1400b-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity,\n          total\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","CartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","items","totalQuantity","total"],"sources":["E:/webdev practice/some react projects/Redux/3.Shop-app/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { CartActions } from \"./cart-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async ( dispatch )=> {\r\n    const fetchData = async () => {\r\n      const response = await fetch('https://just-project-1400b-default-rtdb.firebaseio.com/cart.json');\r\n\r\n      if(!response.ok) {\r\n        throw new Error('Could not fetch cart data!');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try{\r\n      const cartData = await fetchData();\r\n      dispatch(CartActions.replaceCart(cartData));\r\n    }catch(error){\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status:'error',\r\n          title: 'Error!',\r\n          message: 'Fetching cart data failed',\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async(dispatch) => {\r\n    dispatch(uiActions.showNotification({\r\n      status: 'pending',\r\n      title:'Sending...',\r\n      message: 'Sending cart data!',\r\n    }));   \r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch('https://just-project-1400b-default-rtdb.firebaseio.com/cart.json',{ method: 'PUT', body: JSON.stringify({\r\n        items: cart.items,\r\n        totalQuantity: cart.totalQuantity,\r\n        total\r\n      }), });\r\n\r\n      if(!response.ok) {\r\n        throw new Error('Sending cart data failed');\r\n      } \r\n    };\r\n    \r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status:'success',\r\n          title:'Success!',\r\n          message: 'Sent cart data successfully!'\r\n        })\r\n      );    \r\n    }\r\n    catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status:'error',\r\n          title:'Error!',\r\n          message: 'Sending cart data failed',\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAQC,QAAQ,IAAK;IAC1B,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAkE,CAAC;MAEhG,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IACD,IAAG;MACD,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC7C,CAAC,QAAME,KAAK,EAAC;MACXV,QAAQ,CACNH,SAAS,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAMhB,QAAQ,IAAK;IACxBA,QAAQ,CAACH,SAAS,CAACc,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAkE,EAAC;QAAEe,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACpIC,KAAK,EAAEN,IAAI,CAACM,KAAK;UACjBC,aAAa,EAAEP,IAAI,CAACO,aAAa;UACjCC;QACF,CAAC;MAAG,CAAC,CAAC;MAEN,IAAG,CAACtB,QAAQ,CAACE,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IAED,IAAI;MACF,MAAMY,WAAW,CAAC,CAAC;MACnBjB,QAAQ,CACNH,SAAS,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,UAAU;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CACD,OAAOJ,KAAK,EAAE;MACZV,QAAQ,CACNH,SAAS,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AAEH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}